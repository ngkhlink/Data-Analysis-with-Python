import pandas as pd
import numpy as np

filepath = "https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-DA0101EN-SkillsNetwork/labs/Data%20files/auto.csv"
print(df)

#Read CSV data set: Read the CSV file containing a data set to a pandas data frame
#load without header 
df = pd.read_csv(<CSV_path>, header = None)
#Example: df = pd.read_csv(file_path, header = None)

#load using first row as header
df = pd.read_csv(<CSV_path>, header = 0)
#Example: df = pd.read_csv(file_path, header = 0)

#Print first few entries: Print the first few entries (default 5) of the pandas data frame
df.head(n) #n=number of entries; default 5
#Example: print(df.head(5))

#Print last few entries: Print the last few entries (default 5) of the pandas data frame
df.tail(n) #n=number of entries; default 5
#Example: print(df.tail(5))

#Assign header names: Assign appropriate header names to the data frame
df.columns = headers
#Example:
#Create headers list
headers = ["symboling","normalized-losses","make","fuel-type","aspiration", "num-of-doors","body-style",
         "drive-wheels","engine-location","wheel-base", "length","width","height","curb-weight","engine-type",
         "num-of-cylinders", "engine-size","fuel-system","bore","stroke","compression-ratio","horsepower",
         "peak-rpm","city-mpg","highway-mpg","price"]
df.columns = headers
print(df.head())

#Replace "?" with NaN: Replace the entries "?" with NaN entry from Numpy library
df = df.replace("?", np.nan)
#Example: df1 = df.replace('?',np.NaN)
print(df1.head())

#Retrieve data types: Retrieve the data types of the data frame columns
df.dtypes
#Example: print(df.dtypes)

#Retrieve statistical description: Retrieve the statistical description of the data set. Defaults use is for only numerical data types. Use include="all" to create summary for all variables
df.describe() 
#default use 
df.describe(include="all")
#Example: print(df.describe(include='all'))

#Retrieve data set summary: Retrieve the summary of the data set being used, from the data frame
df.info()
#Example: print(df.info())

#Save data frame to CSV: Save the processed data frame to a CSV file with a specified path
df.to_csv(<output CSV path>)
#Example: df.to_csv('exercise.csv')
